image: ubuntu:16.04

stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay

build-staging:
  image: docker:latest
  services:
  - docker:dind
  tags:
    - trufla-gitlab-runner
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -f app/docker/staging/Dockerfile -t "$CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHA" app/
    - docker push "$CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHA"
  cache:
    untracked: true
  environment:
    name: staging
  only:
    - staging

deploy-staging:
  image: registry.gitlab.com/codetouch/sharpone/sharpone/deploy:1.3.0
  stage: deploy
  tags:
    - trufla-gitlab-runner
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_STAGING
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_STAGING
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION_STAGING
    - ecs-deploy -c STA-ECS-Cluster -n s1-cgi -i $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHA
  environment:
    name: staging
  only:
  - staging

build-production:
  image: docker:latest
  services:
  - docker:dind
  tags:
    - trufla-gitlab-runner
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -f app/docker/production/Dockerfile -t "$CI_REGISTRY_IMAGE/production:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE/production:$CI_COMMIT_SHA"
  cache:
    untracked: true
  environment:
    name: production
  only:
    - production

deploy-production:
  image: registry.gitlab.com/codetouch/sharpone/sharpone/deploy:1.3.0
  stage: deploy
  tags:
    - trufla-gitlab-runner
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_PRODUCTION
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_PRODUCTION
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION_PRODUCTION
    - ecs-deploy -c prod-ecs-app -n s1-cgi-prod -i $CI_REGISTRY_IMAGE/production:$CI_COMMIT_SHA
  environment:
    name: production
  only:
    - production
  when: manual
